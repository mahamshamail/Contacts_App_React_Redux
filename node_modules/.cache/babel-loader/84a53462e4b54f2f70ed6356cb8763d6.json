{"ast":null,"code":"var _jsxFileName = \"/Users/mahamshamail/Contacts_App_React_Redux/src/components/Contacts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchContacts } from '../actions/postActions';\nimport './Contact.css';\nimport ContactView from \"./view-contact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Contacts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      num: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.fetchContacts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newContact) {\n      this.props.contacts.unshift(nextProps.newContact);\n    }\n  }\n\n  handleClick(id) {\n    this.setState(state => ({\n      num: id - 1\n    }));\n  }\n\n  render() {\n    var num = 0;\n    const postContacts = this.props.contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: contact.id,\n      className: \"contact\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact_1\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => this.handleClick(contact.id),\n          children: contact.first_name + \" \" + contact.last_name + \"  |  \" + contact.primary_email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, contact.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this));\n    const contactViewViewable = this.props.contacts.map(contact => /*#__PURE__*/_jsxDEV(\"table\", {\n      id: contact.id + '_table',\n      className: \"table table-striped\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"3\",\n            children: contact.first_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"3\",\n            children: contact.last_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"3\",\n            children: contact.primary_email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contactList\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contacts List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), postContacts, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Contact View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"you\",\n          children: contactViewViewable[this.state.num]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nContacts.propTypes = {\n  fetchContacts: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n  newContact: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n  newcontact: state.contacts.contactItem\n});\n\nexport default connect(mapStateToProps, {\n  fetchContacts\n})(Contacts);","map":{"version":3,"sources":["/Users/mahamshamail/Contacts_App_React_Redux/src/components/Contacts.js"],"names":["React","Component","PropTypes","connect","fetchContacts","ContactView","Contacts","constructor","props","state","num","handleClick","bind","componentWillMount","componentWillReceiveProps","nextProps","newContact","contacts","unshift","id","setState","render","postContacts","map","contact","first_name","last_name","primary_email","contactViewViewable","propTypes","func","isRequired","array","object","mapStateToProps","items","newcontact","contactItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { \n  fetchContacts } from '../actions/postActions';\nimport './Contact.css';\nimport ContactView from \"./view-contact\";\n\nclass Contacts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {num:0}\n    this.handleClick = this.handleClick.bind(this);\n}\n  componentWillMount() {\n   \n    this.props.fetchContacts();\n\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newContact) {\n      this.props.contacts.unshift(nextProps.newContact);\n    }\n  }\n  \n\n  handleClick(id) {\n      this.setState(state => ({\n        num: id-1\n      }));\n   \n  }\n  \n  \n  \n  render() {\n \n    var num = 0;\n    const postContacts = this.props.contacts.map(contact => (\n      <div id={contact.id} className='contact' key={contact.id}>\n        \n        <div className=\"contact_1\" >\n          <p onClick={() => this.handleClick(contact.id)}>{contact.first_name +\" \"+ contact.last_name + \"  |  \"+ contact.primary_email}</p>\n        </div>\n\n       \n        \n      </div>\n\n      \n    ));\n    \n    const contactViewViewable = this.props.contacts.map(contact => (\n     \n     <table id={contact.id + '_table'} className=\"table table-striped\">\n     <tbody>\n     <tr>\n         <th>First Name </th>\n         <th colSpan=\"3\">{contact.first_name}</th>\n     </tr>\n     <tr>\n         <th>Last Name </th>\n         <th colSpan=\"3\">{contact.last_name}</th>\n     </tr>\n     <tr>\n         <th>Email </th>\n         <th colSpan=\"3\">{contact.primary_email}</th>\n     </tr>\n     </tbody>\n </table>\n     \n    ));\n    return (\n      <div className='contactList'>\n        <hr></hr>\n        <h1>Contacts List</h1>\n        <hr></hr>\n        \n        {postContacts}\n        <br></br>\n        <div>\n\n          <hr></hr>\n          <h1>Contact View</h1>\n          <hr></hr>\n          <div className='you'>\n          {contactViewViewable[this.state.num]}\n          \n          \n          \n          \n          </div>\n      \n        </div>\n      </div>\n    );\n  }\n}\n\nContacts.propTypes = {\n \n\n  fetchContacts: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n  newContact: PropTypes.object\n\n};\n\nconst mapStateToProps = state => ({\n\n  contacts: state.contacts.items,\n  newcontact: state.contacts.contactItem\n});\n\nexport default connect(mapStateToProps, { \n\n  fetchContacts })(Contacts);\n"]},"metadata":{},"sourceType":"module"}